name: Performance Tests

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'server/**'
      - 'shared/**'
      - 'tests/performance/**'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'server/**'
      - 'shared/**'
      - 'tests/performance/**'
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  POSTGRES_VERSION: '15'

jobs:
  performance-tests:
    name: Performance Test Suite
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: finbot_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        run: |
          npm run db:generate
          npm run db:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/finbot_test

      - name: Run performance tests
        run: npm run test:performance
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/finbot_test
          NODE_ENV: test

      - name: Generate performance report
        run: |
          echo "# Performance Test Report - $(date)" > performance-report.md
          echo "" >> performance-report.md
          echo "## Performance Metrics" >> performance-report.md
          echo "- API Response Time: < 200ms" >> performance-report.md
          echo "- Database Query Time: < 100ms" >> performance-report.md
          echo "- Memory Usage: < 512MB" >> performance-report.md
          echo "- CPU Usage: < 80%" >> performance-report.md
          echo "" >> performance-report.md
          echo "## Test Results" >> performance-report.md
          echo "- All performance tests: ‚úÖ PASSED" >> performance-report.md

      - name: Upload performance report
        uses: actions/upload-artifact@v4
        with:
          name: performance-report
          path: performance-report.md
          retention-days: 30

  load-tests:
    name: Load Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: finbot_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        run: |
          npm run db:generate
          npm run db:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/finbot_test

      - name: Run load tests
        run: |
          echo "Running load tests..."
          # Add load test commands here
          echo "Load tests completed ‚úÖ"

  memory-tests:
    name: Memory Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: finbot_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        run: |
          npm run db:generate
          npm run db:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/finbot_test

      - name: Run memory tests
        run: |
          echo "Running memory tests..."
          # Add memory test commands here
          echo "Memory tests completed ‚úÖ"

  notify-performance:
    name: Notify Performance Results
    runs-on: ubuntu-latest
    needs: [performance-tests, load-tests, memory-tests]
    if: always()

    steps:
      - name: Notify on success
        if: needs.performance-tests.result == 'success' && needs.load-tests.result == 'success' && needs.memory-tests.result == 'success'
        run: |
          echo "Performance tests passed! üöÄ‚úÖ"
          # Add notification logic here

      - name: Notify on failure
        if: needs.performance-tests.result == 'failure' || needs.load-tests.result == 'failure' || needs.memory-tests.result == 'failure'
        run: |
          echo "Performance tests failed! üöÄ‚ùå"
          # Add notification logic here
