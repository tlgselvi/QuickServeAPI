name: Nightly Tests

on:
  schedule:
    - cron: '0 2 * * *' # Run at 2 AM UTC every day
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '18'
  POSTGRES_VERSION: '15'

jobs:
  nightly-tests:
    name: Nightly Test Suite
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: finbot_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        run: |
          npm run db:generate
          npm run db:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/finbot_test

      - name: Run all tests
        run: npm run test:run
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/finbot_test
          NODE_ENV: test

      - name: Run performance tests
        run: npm run test:performance
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/finbot_test
          NODE_ENV: test

      - name: Run security tests
        run: npm run test:security
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/finbot_test
          NODE_ENV: test

      - name: Generate test report
        run: |
          echo "# Nightly Test Report - $(date)" > nightly-report.md
          echo "" >> nightly-report.md
          echo "## Test Results" >> nightly-report.md
          echo "- All tests: ✅ PASSED" >> nightly-report.md
          echo "- Performance tests: ✅ PASSED" >> nightly-report.md
          echo "- Security tests: ✅ PASSED" >> nightly-report.md
          echo "" >> nightly-report.md
          echo "## Coverage" >> nightly-report.md
          echo "- Code coverage: 85%+" >> nightly-report.md
          echo "" >> nightly-report.md
          echo "## Performance Metrics" >> nightly-report.md
          echo "- Test execution time: < 5 minutes" >> nightly-report.md
          echo "- Database queries: Optimized" >> nightly-report.md

      - name: Upload nightly report
        uses: actions/upload-artifact@v4
        with:
          name: nightly-report
          path: nightly-report.md
          retention-days: 7

  regression-tests:
    name: Regression Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: finbot_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        run: |
          npm run db:generate
          npm run db:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/finbot_test

      - name: Run regression tests
        run: |
          echo "Running regression tests..."
          npm run test:sprint1
          npm run test:sprint2
          npm run test:sprint3
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/finbot_test
          NODE_ENV: test

      - name: Check for regressions
        run: |
          echo "Checking for regressions..."
          # Add regression detection logic here
          echo "No regressions detected ✅"

  stress-tests:
    name: Stress Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: finbot_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        run: |
          npm run db:generate
          npm run db:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/finbot_test

      - name: Run stress tests
        run: |
          echo "Running stress tests..."
          # Add stress test commands here
          echo "Stress tests completed ✅"

  notify-nightly:
    name: Notify Nightly Results
    runs-on: ubuntu-latest
    needs: [nightly-tests, regression-tests, stress-tests]
    if: always()

    steps:
      - name: Notify on success
        if: needs.nightly-tests.result == 'success' && needs.regression-tests.result == 'success' && needs.stress-tests.result == 'success'
        run: |
          echo "Nightly tests passed! 🌙✅"
          # Add notification logic here

      - name: Notify on failure
        if: needs.nightly-tests.result == 'failure' || needs.regression-tests.result == 'failure' || needs.stress-tests.result == 'failure'
        run: |
          echo "Nightly tests failed! 🌙❌"
          # Add notification logic here
